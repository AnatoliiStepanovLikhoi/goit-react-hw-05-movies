{"version":3,"file":"static/js/359.35dc3e97.chunk.js","mappings":"mTAGMA,EAAU,mCAIT,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6GAEqBC,EAAAA,EAAAA,IAAA,sCAAyCF,IAF9D,cAEGG,EAFH,yBAIIA,EAAUC,KAAKC,SAJnB,+IAUA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,gGAEqBL,EAAAA,EAAAA,IAAA,gBAAmBK,EAAnB,oBAAsCP,IAF3D,cAEGG,EAFH,yBAMIA,EAAUC,MANd,+IAYA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA+BD,GAA/B,gGAEqBL,EAAAA,EAAAA,IAAA,gBACbK,EADa,4BACcP,IAHnC,cAEGG,EAFH,yBAMIA,EAAUC,MANd,+IAYA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA+BF,GAA/B,gGAEqBL,EAAAA,EAAAA,IAAA,gBACbK,EADa,4BACcP,IAHnC,cAEGG,EAFH,yBAMIA,EAAUC,MANd,+IAYA,SAAeM,EAAtB,iDAAO,OAAP,oBAAO,WAA8BC,EAAaC,GAA3C,gGAEqBV,EAAAA,EAAAA,IAAA,+BACEF,EADF,kBACmBW,EADnB,iBACuCC,EADvC,yBAFrB,cAEGT,EAFH,yBAMIA,EAAUC,KAAKC,SANnB,+IAhDPH,EAAAA,EAAAA,SAAAA,QAHiB,+B,uJCAJW,EAAWC,EAAAA,EAAAA,GAAH,kMAURC,EAAYD,EAAAA,EAAAA,IAAH,yHAQTE,EAAWF,EAAAA,EAAAA,EAAH,6CAIRG,EAAWH,EAAAA,EAAAA,GAAH,0GAORI,EAAWJ,EAAAA,EAAAA,GAAH,gH,SCfN,SAASK,IACtB,IAAQZ,GAAYa,EAAAA,EAAAA,MAAZb,QACR,GAAwBc,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KAQA,OANAC,EAAAA,EAAAA,YAAU,YACRhB,EAAAA,EAAAA,IAAgBD,GAASkB,MAAK,gBAAGH,EAAH,EAAGA,KAAH,OAAcC,EAAQD,EAAtB,GAC/B,GAAE,CAACf,IAEJmB,QAAQC,IAAIL,GAEPA,GAMH,SAACT,EAAD,UACGS,EAAKM,KAAI,SAAAC,GAAI,OACZ,UAACZ,EAAD,YACE,SAACF,EAAD,CACEe,IACED,EAAKE,aAAL,0CACuCF,EAAKE,cACxCC,EAENC,IAAKJ,EAAKK,QAEZ,SAAClB,EAAD,UAAWa,EAAKK,QAEhB,UAAChB,EAAD,YACE,uCACA,uBAAIW,EAAKM,iBAbEN,EAAKO,GADR,MANT,IA2BV,C","sources":["API/fetchMovies.js","components/MovieDetails/Cast/Cast.styled.jsx","components/MovieDetails/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '19011014b9b53c4fd496d37c25f2b619';\n\naxios.defaults.baseURL = BASE_URL;\n\nexport async function getTrendings() {\n  try {\n    const fetchData = await axios.get(`trending/movie/week?api_key=${API_KEY}`);\n\n    return fetchData.data.results;\n  } catch (error) {\n    return error;\n  }\n}\n\nexport async function getMovieById(movieId) {\n  try {\n    const fetchData = await axios.get(`movie/${movieId}?api_key=${API_KEY}`);\n\n    // console.log(fetchData);\n\n    return fetchData.data;\n  } catch (error) {\n    return error;\n  }\n}\n\nexport async function getMovieCredits(movieId) {\n  try {\n    const fetchData = await axios.get(\n      `movie/${movieId}/credits?api_key=${API_KEY}`\n    );\n\n    return fetchData.data;\n  } catch (error) {\n    return error;\n  }\n}\n\nexport async function getMovieReviews(movieId) {\n  try {\n    const fetchData = await axios.get(\n      `movie/${movieId}/reviews?api_key=${API_KEY}`\n    );\n\n    return fetchData.data;\n  } catch (error) {\n    return error;\n  }\n}\n\nexport async function getMovieByName(searchQuery, searchPage) {\n  try {\n    const fetchData = await axios.get(\n      `search/movie?api_key=${API_KEY}&query=${searchQuery}&page=${searchPage}&include_adult=false`\n    );\n\n    return fetchData.data.results;\n  } catch (error) {\n    return error;\n  }\n}\n","import styled from '@emotion/styled';\n\nexport const CastList = styled.ul`\n  display: grid;\n  gap: 16px;\n  grid-template-columns: repeat(auto-fill, minmax(240px, 1fr));\n  margin: 0 auto;\n  max-width: calc(100vw - 30px);\n\n  padding: 12px;\n`;\n\nexport const CastImage = styled.img`\n  display: block;\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  border-radius: 8px;\n`;\n\nexport const CastName = styled.p`\n  font-weight: 500;\n`;\n\nexport const CastItem = styled.li`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  gap: 4px;\n`;\n\nexport const CastInfo = styled.li`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  /* gap: 4px; */\n`;\n","import { useEffect } from 'react';\nimport { useState } from 'react';\n\nimport { getMovieCredits } from '../../../API/fetchMovies';\nimport { useParams } from 'react-router-dom';\n\nimport posterPhoto from '../../../images/movie-poster-coming-soon.jpg';\n\nimport {\n  CastList,\n  CastImage,\n  CastItem,\n  CastInfo,\n  CastName,\n} from './Cast.styled';\n\nexport default function Cast() {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState(null);\n\n  useEffect(() => {\n    getMovieCredits(movieId).then(({ cast }) => setCast(cast));\n  }, [movieId]);\n\n  console.log(cast);\n\n  if (!cast) {\n    return null;\n  }\n\n  return (\n    // cast && (\n    <CastList>\n      {cast.map(item => (\n        <CastItem key={item.id}>\n          <CastImage\n            src={\n              item.profile_path\n                ? `https://image.tmdb.org/t/p/w500/${item.profile_path}`\n                : posterPhoto\n            }\n            alt={item.name}\n          />\n          <CastName>{item.name}</CastName>\n\n          <CastInfo>\n            <p>Character:</p>\n            <p>{item.character}</p>\n          </CastInfo>\n        </CastItem>\n      ))}\n    </CastList>\n    // )\n  );\n}\n"],"names":["API_KEY","getTrendings","axios","fetchData","data","results","getMovieById","movieId","getMovieCredits","getMovieReviews","getMovieByName","searchQuery","searchPage","CastList","styled","CastImage","CastName","CastItem","CastInfo","Cast","useParams","useState","cast","setCast","useEffect","then","console","log","map","item","src","profile_path","posterPhoto","alt","name","character","id"],"sourceRoot":""}