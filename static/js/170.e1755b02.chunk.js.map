{"version":3,"file":"static/js/170.e1755b02.chunk.js","mappings":"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","sources":["API/fetchMovies.js","components/Common/Button.styled.jsx","components/MovieDetails/MovieDetails.styled.jsx","components/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '19011014b9b53c4fd496d37c25f2b619';\n\naxios.defaults.baseURL = BASE_URL;\n\nexport async function getTrendings() {\n  try {\n    const fetchData = await axios.get(`trending/movie/week?api_key=${API_KEY}`);\n\n    return fetchData.data.results;\n  } catch (error) {\n    return error;\n  }\n}\n\nexport async function getMovieById(movieId) {\n  try {\n    const fetchData = await axios.get(`movie/${movieId}?api_key=${API_KEY}`);\n\n    // console.log(fetchData);\n\n    return fetchData.data;\n  } catch (error) {\n    return error;\n  }\n}\n\nexport async function getMovieCredits(movieId) {\n  try {\n    const fetchData = await axios.get(\n      `movie/${movieId}/credits?api_key=${API_KEY}`\n    );\n\n    return fetchData.data;\n  } catch (error) {\n    return error;\n  }\n}\n\nexport async function getMovieReviews(movieId) {\n  try {\n    const fetchData = await axios.get(\n      `movie/${movieId}/reviews?api_key=${API_KEY}`\n    );\n\n    return fetchData.data;\n  } catch (error) {\n    return error;\n  }\n}\n\nexport async function getMovieByName(searchQuery, searchPage) {\n  try {\n    const fetchData = await axios.get(\n      `search/movie?api_key=${API_KEY}&query=${searchQuery}&page=${searchPage}&include_adult=false`\n    );\n\n    return fetchData.data.results;\n  } catch (error) {\n    return error;\n  }\n}\n","import styled from '@emotion/styled';\n\nexport const Button = styled.button`\n  /* margin-bottom: 14px; */\n  /* margin-right: 8px; */\n  border-radius: 8px;\n  border: 1px solid grey;\n\n  font-size: 16px;\n\n  :hover,\n  :focus {\n    color: #ffffff;\n    background-color: #eb8596;\n    border: 1px solid #eb8596;\n  }\n`;\n","import styled from '@emotion/styled';\n\nimport { NavLink } from 'react-router-dom';\n\nexport const DetailsContainer = styled.section`\n  padding: 15px;\n`;\n\nexport const DescSection = styled.section`\n  display: grid;\n  grid-template-columns: 400px 1fr;\n  grid-template-rows: 1fr;\n  grid-column-gap: 36px;\n\n  margin: 16px 0;\n`;\n\nexport const InfoSection = styled.section`\n  padding: 8px;\n\n  margin-bottom: 16px;\n`;\n\nexport const DescContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 36px;\n`;\n\nexport const MovieTitle = styled.h2`\n  font-size: 24px;\n  font-weight: 700;\n\n  /* margin-bottom: 16px; */\n`;\n\nexport const GenresList = styled.ul`\n  display: flex;\n  gap: 4px;\n`;\n\nexport const InfoLink = styled(NavLink)`\n  color: black;\n  padding: 4px 8px;\n\n  &.active {\n    color: #ffffff;\n    background-color: #eb8596;\n\n    border-radius: 4px;\n  }\n`;\n\nexport const InfoList = styled.ul`\n  display: flex;\n  gap: 16px;\n`;\n\nexport const InfoTitle = styled.h2`\n  margin-bottom: 8px;\n`;\n","import {\n  useParams,\n  Outlet,\n  useNavigate,\n  useLocation,\n  // Link,\n} from 'react-router-dom';\n\nimport {\n  useEffect,\n  useState,\n  // useRef\n} from 'react';\n\nimport { getMovieById } from '../../API/fetchMovies';\n\nimport {\n  DetailsContainer,\n  DescSection,\n  MovieTitle,\n  DescContainer,\n  GenresList,\n  InfoLink,\n  InfoSection,\n  InfoList,\n  InfoTitle,\n} from './MovieDetails.styled';\n\nimport { Button } from 'components/Common/Button.styled';\n\nimport posterPhoto from '../../images/movie-poster-coming-soon.jpg';\n\nfunction MovieDetails() {\n  const [movieDetails, setMovieDetails] = useState([]);\n  const navigate = useNavigate();\n  const { movieId } = useParams();\n\n  const location = useLocation();\n\n  // const { state } = location.state;\n\n  useEffect(() => {\n    getMovieById(movieId).then(setMovieDetails);\n  }, [movieId]);\n\n  const userScores = Math.round(movieDetails?.vote_average * 10);\n\n  const findGenres = movieDetails.genres?.map(genre => genre.name);\n\n  // const goBackRef = useRef(\n  //   `${location.state?.from.pathname}${\n  //     location.state?.from.pathname ? location.state?.from.search : ''\n  //   }`\n  // );\n\n  const goBackRef = location.state?.from ?? '/';\n\n  // console.log(location.state.from);\n  // console.log(goBackRef.current);\n\n  return (\n    <DetailsContainer>\n      <Button\n        onClick={() => {\n          navigate(goBackRef);\n        }}\n        type=\"button\"\n      >\n        &#129092; Go back\n      </Button>\n\n      {/* <Link to={goBackRef}>Go back</Link> */}\n\n      {movieDetails?.title && (\n        <div>\n          <DescSection>\n            <img\n              src={\n                movieDetails.poster_path\n                  ? `https://image.tmdb.org/t/p/w500/${movieDetails.poster_path}`\n                  : posterPhoto\n              }\n              alt={movieDetails.title}\n            />\n            <DescContainer>\n              <MovieTitle>\n                {movieDetails.title} ({movieDetails.release_date.slice(0, 4)})\n              </MovieTitle>\n              <p>User Score: {userScores}%</p>\n\n              <h3>Overview:</h3>\n              <p>{movieDetails.overview}</p>\n\n              <h3>Genres:</h3>\n              <GenresList>\n                {findGenres.map(item => (\n                  <li key={item}>{item}</li>\n                ))}\n              </GenresList>\n            </DescContainer>\n          </DescSection>\n          <InfoSection>\n            <InfoTitle>Additional information</InfoTitle>\n            <InfoList>\n              <li>\n                <InfoLink to=\"cast\">Cast</InfoLink>\n              </li>\n              <li>\n                <InfoLink to=\"reviews\">Reviews</InfoLink>\n              </li>\n            </InfoList>\n          </InfoSection>\n        </div>\n      )}\n      <Outlet />\n    </DetailsContainer>\n  );\n}\n\nexport default MovieDetails;\n"],"names":["API_KEY","getTrendings","axios","fetchData","data","results","getMovieById","movieId","getMovieCredits","getMovieReviews","getMovieByName","searchQuery","searchPage","Button","styled","DetailsContainer","DescSection","InfoSection","DescContainer","MovieTitle","GenresList","InfoLink","NavLink","InfoList","InfoTitle","useState","movieDetails","setMovieDetails","navigate","useNavigate","useParams","location","useLocation","useEffect","then","userScores","Math","round","vote_average","findGenres","genres","map","genre","name","goBackRef","state","from","onClick","type","title","src","poster_path","posterPhoto","alt","release_date","slice","overview","item","to"],"sourceRoot":""}